<%- include('../partials/header') %>

<div class="row">
  <div class="col-md-12 mb-4">
    <div class="card bg-black text-light border-secondary">
      <div class="card-body">
        <h2 class="card-title text-warning mb-4">
          <i class="bi bi-calendar-plus me-2"></i>Buat Jadwal Posting
        </h2>
        
        <% if (tokens.length === 0 || channels.length === 0) { %>
          <div class="alert alert-danger">
            <i class="bi bi-exclamation-triangle me-2"></i>
            <% if (tokens.length === 0 && channels.length === 0) { %>
              Anda harus menambahkan token bot dan channel terlebih dahulu.
            <% } else if (tokens.length === 0) { %>
              Anda harus menambahkan token bot terlebih dahulu.
            <% } else { %>
              Anda harus menambahkan channel terlebih dahulu.
            <% } %>
          </div>
        <% } else { %>
          <form action="/posts/add" method="POST" enctype="multipart/form-data">
            <div class="row g-3">
              <div class="col-md-6 mb-3">
                <label for="tokenId" class="form-label">Bot Token</label>
                <select class="form-select bg-dark text-light border-secondary" id="tokenId" name="tokenId" required>
                  <option value="" selected disabled>-- Pilih Bot Token --</option>
                  <% tokens.forEach(function(token) { %>
                    <option value="<%= token.id %>"><%= token.name %></option>
                  <% }); %>
                </select>
              </div>
              
              <div class="col-md-6 mb-3">
                <label for="channelId" class="form-label">Channel</label>
                <select class="form-select bg-dark text-light border-secondary" id="channelId" name="channelId" required>
                  <option value="" selected disabled>-- Pilih Channel --</option>
                  <% channels.forEach(function(channel) { %>
                    <option value="<%= channel.id %>"><%= channel.name %> (<%= channel.channelId %>)</option>
                  <% }); %>
                </select>
              </div>
              
              <div class="col-12 mb-3">
                <label for="title" class="form-label">
                  <i class="bi bi-type-h1 me-1 text-primary"></i>
                  Judul Post
                </label>
                <input type="text" class="form-control bg-dark text-light border-secondary" id="title" name="title" placeholder="Masukkan judul post (opsional)">
                <small class="text-primary">
                  <i class="bi bi-info-circle me-1"></i>
                  Judul akan ditampilkan di awal pesan dengan format KAPITAL
                </small>
              </div>
              
              <div class="col-12 mb-3">
                <label for="message" class="form-label">Pesan</label>
                <div class="mb-2">
                  <button type="button" class="btn btn-sm btn-outline-primary me-2" onclick="insertTemplate('nonton')">
                    <i class="bi bi-play-circle me-1"></i>Template Nonton
                  </button>
                  <button type="button" class="btn btn-sm btn-outline-info me-2" onclick="insertTemplate('link')">
                    <i class="bi bi-link-45deg me-1"></i>Template Link
                  </button>
                  <button type="button" class="btn btn-sm btn-outline-warning" onclick="insertTemplate('promo')">
                    <i class="bi bi-star me-1"></i>Template Promo
                  </button>
                </div>
                <textarea class="form-control bg-dark text-light border-secondary" id="message" name="message" rows="4" placeholder="Masukkan isi pesan yang akan dikirim ke channel" required></textarea>
              </div>
              
              <div class="col-md-4 mb-3">
                <label for="image" class="form-label">Gambar (Opsional)</label>
                <input class="form-control bg-dark text-light border-secondary" type="file" id="image" name="image" accept="image/*">
                <div class="form-text text-light">Ukuran maksimal 5MB. Format: JPG, PNG, GIF.</div>
              </div>
              
              <div class="col-md-4 mb-3">
                <label for="scheduleDate" class="form-label">Tanggal</label>
                <input type="date" class="form-control bg-dark text-light border-secondary" id="scheduleDate" name="scheduleDate" required>
              </div>
              
              <div class="col-md-4 mb-3">
                <label for="scheduleTime" class="form-label">Waktu</label>
                <input type="time" class="form-control bg-dark text-light border-secondary" id="scheduleTime" name="scheduleTime" required>
              </div>
              
              <div class="col-12">
                <button type="submit" class="btn btn-warning">
                  <i class="bi bi-calendar-plus me-1"></i>Jadwalkan Post
                </button>
              </div>
            </div>
          </form>
        <% } %>
      </div>
    </div>
  </div>
  
  <div class="col-md-12">
    <div class="card bg-black text-light border-secondary">
      <div class="card-header bg-black border-secondary">
        <ul class="nav nav-tabs card-header-tabs" id="postTabs" role="tablist">
          <li class="nav-item" role="presentation">
            <button class="nav-link active bg-transparent text-info" id="pending-tab" data-bs-toggle="tab" data-bs-target="#pending-content" type="button" role="tab" aria-controls="pending-content" aria-selected="true">
              <i class="bi bi-clock me-1"></i>Menunggu
              <% const pendingCount = configs.filter(c => c.status === 'pending').length; %>
              <span class="badge bg-secondary ms-1"><%= pendingCount %></span>
            </button>
          </li>
          <li class="nav-item" role="presentation">
            <button class="nav-link bg-transparent text-warning" id="processing-tab" data-bs-toggle="tab" data-bs-target="#processing-content" type="button" role="tab" aria-controls="processing-content" aria-selected="false">
              <i class="bi bi-arrow-repeat me-1"></i>Eksekusi
              <% const processingCount = configs.filter(c => c.status === 'processing').length; %>
              <span class="badge bg-warning ms-1"><%= processingCount %></span>
            </button>
          </li>
          <li class="nav-item" role="presentation">
            <button class="nav-link bg-transparent text-success" id="success-tab" data-bs-toggle="tab" data-bs-target="#success-content" type="button" role="tab" aria-controls="success-content" aria-selected="false">
              <i class="bi bi-check-circle me-1"></i>Sukses
              <% const successCount = configs.filter(c => c.status === 'sent').length; %>
              <span class="badge bg-success ms-1"><%= successCount %></span>
            </button>
          </li>
          <li class="nav-item" role="presentation">
            <button class="nav-link bg-transparent text-danger" id="failed-tab" data-bs-toggle="tab" data-bs-target="#failed-content" type="button" role="tab" aria-controls="failed-content" aria-selected="false">
              <i class="bi bi-exclamation-triangle me-1"></i>Gagal
              <% const failedCount = configs.filter(c => c.status === 'failed').length; %>
              <span class="badge bg-danger ms-1"><%= failedCount %></span>
            </button>
          </li>
        </ul>
      </div>
      
      <div class="card-body">
        <div class="tab-content" id="postTabsContent">
          <!-- Tab Menunggu -->
          <div class="tab-pane fade show active" id="pending-content" role="tabpanel" aria-labelledby="pending-tab">
            <% if (pendingCount === 0) { %>
              <div class="alert alert-dark text-center">
                <div class="fs-1 text-muted mb-3"><i class="bi bi-clock"></i></div>
                <h5>Belum ada post terjadwal</h5>
                <p class="mb-3">Buat jadwal posting otomatis untuk channel Telegram Anda.</p>
              </div>
            <% } else { %>
              <div class="table-responsive">
                <table class="table table-dark table-hover">
                  <thead>
                    <tr>
                      <th>Channel</th>
                      <th>Pesan</th>
                      <th>Media</th>
                      <th>Jadwal</th>
                      <th>Countdown</th>
                      <th>Aksi</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% 
                      // Filter hanya post yang pending
                      const pendingPosts = configs.filter(config => config.status === 'pending');
                      
                      // Urutkan berdasarkan timestamp terdekat
                      pendingPosts.sort((a, b) => a.scheduleTimestamp - b.scheduleTimestamp);
                      
                      pendingPosts.forEach(function(config) { 
                        const channel = channels.find(c => c.id === config.channelId);
                        const channelName = channel ? channel.name : 'Unknown';
                        
                        const scheduleDate = new Date(config.scheduleTimestamp);
                        const formattedDate = scheduleDate.toLocaleDateString('id-ID', { 
                          day: '2-digit', 
                          month: 'short', 
                          year: 'numeric'
                        });
                        
                        const formattedTime = scheduleDate.toLocaleTimeString('id-ID', {
                          hour: '2-digit',
                          minute: '2-digit'
                        });
                    %>
                      <tr class="status-pending">
                        <td>
                          <span class="d-flex align-items-center">
                            <i class="bi bi-broadcast-pin me-2 text-success"></i>
                            <%= channelName %>
                          </span>
                        </td>
                        <td>
                          <% if (config.title && config.title.trim() !== '') { %>
                            <div class="small fw-bold text-primary mb-1"><%= config.title %></div>
                          <% } %>
                          <% if (config.originalMessage && config.originalMessage.length > 30) { %>
                            <span class="text-truncate d-inline-block" style="max-width: 200px;" title="<%= config.originalMessage %>">
                              <%= config.originalMessage.substring(0, 30) %>...
                            </span>
                          <% } else if (config.originalMessage) { %>
                            <%= config.originalMessage %>
                          <% } else if (config.message.length > 30) { %>
                            <span class="text-truncate d-inline-block" style="max-width: 200px;" title="<%= config.message %>">
                              <%= config.message.substring(0, 30) %>...
                            </span>
                          <% } else { %>
                            <%= config.message %>
                          <% } %>
                        </td>
                        <td>
                          <% if (config.imagePath) { %>
                            <span class="badge bg-info">
                              <i class="bi bi-image me-1"></i>Ada
                            </span>
                          <% } else { %>
                            <span class="badge bg-secondary">
                              <i class="bi bi-text-paragraph me-1"></i>Teks
                            </span>
                          <% } %>
                        </td>
                        <td>
                          <span class="d-flex align-items-center">
                            <i class="bi bi-calendar-event me-2 text-primary"></i>
                            <%= formattedDate %> <span class="badge bg-dark ms-1"><%= formattedTime %></span>
                          </span>
                        </td>
                        <td>
                          <div class="countdown-timer" data-timestamp="<%= config.scheduleTimestamp %>" data-post-id="<%= config.id %>">
                            <div class="d-flex align-items-center countdown-display">
                              <div class="spinner-border spinner-border-sm text-primary me-2" role="status">
                                <span class="visually-hidden">Loading...</span>
                              </div>
                              <span class="text-info">Menghitung...</span>
                            </div>
                          </div>
                        </td>
                        <td>
                          <form action="/posts/delete/<%= config.id %>" method="POST" class="d-inline">
                            <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Yakin ingin menghapus jadwal post ini?')">
                              <i class="bi bi-trash me-1"></i>Hapus
                            </button>
                          </form>
                        </td>
                      </tr>
                    <% }); %>
                  </tbody>
                </table>
              </div>
            <% } %>
          </div>
          
          <!-- Tab Eksekusi -->
          <div class="tab-pane fade" id="processing-content" role="tabpanel" aria-labelledby="processing-tab">
            <% if (processingCount === 0) { %>
              <div class="alert alert-dark text-center">
                <div class="fs-1 text-muted mb-3"><i class="bi bi-arrow-repeat"></i></div>
                <h5>Tidak ada post sedang dieksekusi</h5>
                <p class="mb-3">Post yang sedang dalam proses pengiriman akan muncul di sini.</p>
              </div>
            <% } else { %>
              <div class="table-responsive">
                <table class="table table-dark table-hover">
                  <thead>
                    <tr>
                      <th>Channel</th>
                      <th>Pesan</th>
                      <th>Media</th>
                      <th>Jadwal</th>
                      <th>Status</th>
                      <th>Aksi</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% 
                      // Filter hanya post yang processing
                      const processingPosts = configs.filter(config => config.status === 'processing');
                      
                      // Urutkan berdasarkan timestamp
                      processingPosts.sort((a, b) => a.scheduleTimestamp - b.scheduleTimestamp);
                      
                      processingPosts.forEach(function(config) { 
                        const channel = channels.find(c => c.id === config.channelId);
                        const channelName = channel ? channel.name : 'Unknown';
                        
                        const scheduleDate = new Date(config.scheduleTimestamp);
                        const formattedDate = scheduleDate.toLocaleDateString('id-ID', { 
                          day: '2-digit', 
                          month: 'short', 
                          year: 'numeric'
                        });
                        
                        const formattedTime = scheduleDate.toLocaleTimeString('id-ID', {
                          hour: '2-digit',
                          minute: '2-digit'
                        });
                        
                        // Hitung waktu sudah berapa lama dalam proses
                        const now = new Date().getTime();
                        const processingTime = now - scheduleDate.getTime();
                        const processingMinutes = Math.floor(processingTime / 60000);
                        const processingSeconds = Math.floor((processingTime % 60000) / 1000);
                    %>
                      <tr>
                        <td>
                          <span class="d-flex align-items-center">
                            <i class="bi bi-broadcast-pin me-2 text-success"></i>
                            <%= channelName %>
                          </span>
                        </td>
                        <td>
                          <% if (config.title && config.title.trim() !== '') { %>
                            <div class="small fw-bold text-primary mb-1"><%= config.title %></div>
                          <% } %>
                          <% if (config.originalMessage && config.originalMessage.length > 30) { %>
                            <span class="text-truncate d-inline-block" style="max-width: 200px;" title="<%= config.originalMessage %>">
                              <%= config.originalMessage.substring(0, 30) %>...
                            </span>
                          <% } else if (config.originalMessage) { %>
                            <%= config.originalMessage %>
                          <% } else if (config.message.length > 30) { %>
                            <span class="text-truncate d-inline-block" style="max-width: 200px;" title="<%= config.message %>">
                              <%= config.message.substring(0, 30) %>...
                            </span>
                          <% } else { %>
                            <%= config.message %>
                          <% } %>
                        </td>
                        <td>
                          <% if (config.imagePath) { %>
                            <span class="badge bg-info">
                              <i class="bi bi-image me-1"></i>Ada
                            </span>
                          <% } else { %>
                            <span class="badge bg-secondary">
                              <i class="bi bi-text-paragraph me-1"></i>Teks
                            </span>
                          <% } %>
                        </td>
                        <td>
                          <span class="d-flex align-items-center">
                            <i class="bi bi-calendar-event me-2 text-primary"></i>
                            <%= formattedDate %> <span class="badge bg-dark ms-1"><%= formattedTime %></span>
                          </span>
                        </td>
                        <td>
                          <span class="badge bg-warning px-2 py-1">
                            <i class="bi bi-arrow-repeat me-1 spin"></i>Eksekusi
                            <span class="badge bg-dark ms-1">
                              <%= processingMinutes %>:<%= processingSeconds < 10 ? '0' + processingSeconds : processingSeconds %>
                            </span>
                          </span>
                        </td>
                        <td>
                          <div class="btn-group">
                            <button type="button" class="btn btn-success btn-sm me-1" onclick="forceResendPost('<%= config.id %>')">
                              <i class="bi bi-send me-1"></i>Kirim Paksa
                            </button>
                            <form action="/posts/delete/<%= config.id %>" method="POST" class="d-inline">
                              <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Yakin ingin menghentikan dan menghapus eksekusi post ini?')">
                                <i class="bi bi-x-circle me-1"></i>Batalkan
                              </button>
                            </form>
                          </div>
                        </td>
                      </tr>
                    <% }); %>
                  </tbody>
                </table>
              </div>
            <% } %>
          </div>
          
          <!-- Tab Sukses -->
          <div class="tab-pane fade" id="success-content" role="tabpanel" aria-labelledby="success-tab">
            <% if (successCount === 0) { %>
              <div class="alert alert-dark text-center">
                <div class="fs-1 text-muted mb-3"><i class="bi bi-check-circle"></i></div>
                <h5>Belum ada post terkirim</h5>
                <p class="mb-3">Daftar post yang berhasil terkirim akan ditampilkan di sini.</p>
              </div>
            <% } else { %>
              <div class="table-responsive">
                <table class="table table-dark table-hover">
                  <thead>
                    <tr>
                      <th>Channel</th>
                      <th>Pesan</th>
                      <th>Media</th>
                      <th>Waktu Kirim</th>
                      <th>Status</th>
                      <th>Aksi</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% 
                      // Filter hanya post yang sukses
                      const successPosts = configs.filter(config => config.status === 'sent');
                      
                      // Urutkan berdasarkan timestamp terbaru
                      successPosts.sort((a, b) => b.scheduleTimestamp - a.scheduleTimestamp);
                      
                      successPosts.forEach(function(config) { 
                        const channel = channels.find(c => c.id === config.channelId);
                        const channelName = channel ? channel.name : 'Unknown';
                        
                        const scheduleDate = new Date(config.scheduleTimestamp);
                        const formattedDate = scheduleDate.toLocaleDateString('id-ID', { 
                          day: '2-digit', 
                          month: 'short', 
                          year: 'numeric'
                        });
                        
                        const formattedTime = scheduleDate.toLocaleTimeString('id-ID', {
                          hour: '2-digit',
                          minute: '2-digit'
                        });
                    %>
                      <tr>
                        <td>
                          <span class="d-flex align-items-center">
                            <i class="bi bi-broadcast-pin me-2 text-success"></i>
                            <%= channelName %>
                          </span>
                        </td>
                        <td>
                          <% if (config.title && config.title.trim() !== '') { %>
                            <div class="small fw-bold text-primary mb-1"><%= config.title %></div>
                          <% } %>
                          <% if (config.originalMessage && config.originalMessage.length > 30) { %>
                            <span class="text-truncate d-inline-block" style="max-width: 200px;" title="<%= config.originalMessage %>">
                              <%= config.originalMessage.substring(0, 30) %>...
                            </span>
                          <% } else if (config.originalMessage) { %>
                            <%= config.originalMessage %>
                          <% } else if (config.message.length > 30) { %>
                            <span class="text-truncate d-inline-block" style="max-width: 200px;" title="<%= config.message %>">
                              <%= config.message.substring(0, 30) %>...
                            </span>
                          <% } else { %>
                            <%= config.message %>
                          <% } %>
                        </td>
                        <td>
                          <% if (config.imagePath) { %>
                            <span class="badge bg-info">
                              <i class="bi bi-image me-1"></i>Ada
                            </span>
                          <% } else { %>
                            <span class="badge bg-secondary">
                              <i class="bi bi-text-paragraph me-1"></i>Teks
                            </span>
                          <% } %>
                        </td>
                        <td>
                          <span class="d-flex align-items-center">
                            <i class="bi bi-calendar-event me-2 text-primary"></i>
                            <%= formattedDate %> <span class="badge bg-dark ms-1"><%= formattedTime %></span>
                          </span>
                        </td>
                        <td>
                          <span class="badge bg-success px-2 py-1">
                            <i class="bi bi-check-circle me-1"></i>Terkirim
                          </span>
                        </td>
                        <td>
                          <div class="btn-group">
                            <button type="button" class="btn btn-primary btn-sm me-1" onclick="showRescheduleModal('<%= config.id %>')">
                              <i class="bi bi-calendar-plus me-1"></i>Jadwal Ulang
                            </button>
                            <button type="button" class="btn btn-success btn-sm me-1" onclick="resendPost('<%= config.id %>')">
                              <i class="bi bi-send me-1"></i>Kirim Ulang
                            </button>
                            <form action="/posts/delete/<%= config.id %>" method="POST" class="d-inline">
                              <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Yakin ingin menghapus data post ini?')">
                                <i class="bi bi-trash me-1"></i>Hapus
                              </button>
                            </form>
                          </div>
                        </td>
                      </tr>
                    <% }); %>
                  </tbody>
                </table>
              </div>
            <% } %>
          </div>
          
          <!-- Tab Gagal -->
          <div class="tab-pane fade" id="failed-content" role="tabpanel" aria-labelledby="failed-tab">
            <% if (failedCount === 0) { %>
              <div class="alert alert-dark text-center">
                <div class="fs-1 text-muted mb-3"><i class="bi bi-exclamation-triangle"></i></div>
                <h5>Tidak ada post yang gagal</h5>
                <p class="mb-3">Daftar post yang gagal terkirim akan ditampilkan di sini.</p>
              </div>
            <% } else { %>
              <div class="table-responsive">
                <table class="table table-dark table-hover">
                  <thead>
                    <tr>
                      <th>Channel</th>
                      <th>Pesan</th>
                      <th>Media</th>
                      <th>Jadwal</th>
                      <th>Status</th>
                      <th>Aksi</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% 
                      // Filter hanya post yang gagal
                      const failedPosts = configs.filter(config => config.status === 'failed');
                      
                      // Urutkan berdasarkan timestamp terbaru
                      failedPosts.sort((a, b) => b.scheduleTimestamp - a.scheduleTimestamp);
                      
                      failedPosts.forEach(function(config) { 
                        const channel = channels.find(c => c.id === config.channelId);
                        const channelName = channel ? channel.name : 'Unknown';
                        
                        const scheduleDate = new Date(config.scheduleTimestamp);
                        const formattedDate = scheduleDate.toLocaleDateString('id-ID', { 
                          day: '2-digit', 
                          month: 'short', 
                          year: 'numeric'
                        });
                        
                        const formattedTime = scheduleDate.toLocaleTimeString('id-ID', {
                          hour: '2-digit',
                          minute: '2-digit'
                        });
                    %>
                      <tr>
                        <td>
                          <span class="d-flex align-items-center">
                            <i class="bi bi-broadcast-pin me-2 text-success"></i>
                            <%= channelName %>
                          </span>
                        </td>
                        <td>
                          <% if (config.title && config.title.trim() !== '') { %>
                            <div class="small fw-bold text-primary mb-1"><%= config.title %></div>
                          <% } %>
                          <% if (config.originalMessage && config.originalMessage.length > 30) { %>
                            <span class="text-truncate d-inline-block" style="max-width: 200px;" title="<%= config.originalMessage %>">
                              <%= config.originalMessage.substring(0, 30) %>...
                            </span>
                          <% } else if (config.originalMessage) { %>
                            <%= config.originalMessage %>
                          <% } else if (config.message.length > 30) { %>
                            <span class="text-truncate d-inline-block" style="max-width: 200px;" title="<%= config.message %>">
                              <%= config.message.substring(0, 30) %>...
                            </span>
                          <% } else { %>
                            <%= config.message %>
                          <% } %>
                        </td>
                        <td>
                          <% if (config.imagePath) { %>
                            <span class="badge bg-info">
                              <i class="bi bi-image me-1"></i>Ada
                            </span>
                          <% } else { %>
                            <span class="badge bg-secondary">
                              <i class="bi bi-text-paragraph me-1"></i>Teks
                            </span>
                          <% } %>
                        </td>
                        <td>
                          <span class="d-flex align-items-center">
                            <i class="bi bi-calendar-event me-2 text-primary"></i>
                            <%= formattedDate %> <span class="badge bg-dark ms-1"><%= formattedTime %></span>
                          </span>
                        </td>
                        <td>
                          <span class="badge bg-danger px-2 py-1">
                            <i class="bi bi-exclamation-triangle me-1"></i>Gagal
                          </span>
                        </td>
                        <td>
                          <div class="btn-group">
                            <button type="button" class="btn btn-primary btn-sm me-1" onclick="showRescheduleModal('<%= config.id %>')">
                              <i class="bi bi-calendar-plus me-1"></i>Jadwal Ulang
                            </button>
                            <button type="button" class="btn btn-success btn-sm me-1" onclick="resendPost('<%= config.id %>')">
                              <i class="bi bi-send me-1"></i>Kirim Ulang
                            </button>
                            <form action="/posts/delete/<%= config.id %>" method="POST" class="d-inline">
                              <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Yakin ingin menghapus data post ini?')">
                                <i class="bi bi-trash me-1"></i>Hapus
                              </button>
                            </form>
                          </div>
                        </td>
                      </tr>
                    <% }); %>
                  </tbody>
                </table>
              </div>
            <% } %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Modal untuk Jadwal Ulang -->
<div class="modal fade" id="rescheduleModal" tabindex="-1" aria-labelledby="rescheduleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content bg-dark text-light border-secondary">
      <div class="modal-header border-secondary">
        <h5 class="modal-title" id="rescheduleModalLabel"><i class="bi bi-calendar-plus me-2"></i>Jadwal Ulang Post</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <input type="hidden" id="reschedulePostId">
        <div class="mb-3">
          <label for="rescheduleDate" class="form-label">Tanggal Baru</label>
          <input type="date" class="form-control bg-dark text-light border-secondary" id="rescheduleDate" required>
        </div>
        <div class="mb-3">
          <label for="rescheduleTime" class="form-label">Waktu Baru</label>
          <input type="time" class="form-control bg-dark text-light border-secondary" id="rescheduleTime" required>
        </div>
        <div class="alert alert-info d-none" id="rescheduleAlert">
          <i class="bi bi-info-circle me-2"></i>
          <span id="rescheduleAlertMessage"></span>
        </div>
      </div>
      <div class="modal-footer border-secondary">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
        <button type="button" class="btn btn-primary" id="rescheduleButton" onclick="reschedulePost()">
          <i class="bi bi-calendar-check me-1"></i>Jadwalkan Ulang
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  // Set default date to today
  document.addEventListener('DOMContentLoaded', function() {
    if (document.getElementById('scheduleDate')) {
      // Gunakan waktu Jakarta
      const jakartaTime = new Date().toLocaleString('en-US', { timeZone: 'Asia/Jakarta' });
      const today = new Date(jakartaTime);
      
      const year = today.getFullYear();
      let month = today.getMonth() + 1;
      let day = today.getDate();
      
      month = month < 10 ? '0' + month : month;
      day = day < 10 ? '0' + day : day;
      
      document.getElementById('scheduleDate').value = `${year}-${month}-${day}`;
      
      // Set default time to current time + 1 hour
      let hours = today.getHours() + 1;
      let minutes = today.getMinutes();
      
      hours = hours < 10 ? '0' + hours : hours;
      minutes = minutes < 10 ? '0' + minutes : minutes;
      
      document.getElementById('scheduleTime').value = `${hours}:${minutes}`;
    }
    
    // Setup countdown timers
    updateAllCountdowns();
    // Update timers every second
    setInterval(updateAllCountdowns, 1000);
  });
  
  // Fungsi untuk menyisipkan template pesan
  function insertTemplate(type) {
    const messageArea = document.getElementById('message');
    let template = '';
    
    switch(type) {
      case 'nonton':
        template = "🎬 NONTON DI SINI 🎬\n---------------------------\n\nKlik link dibawah untuk menonton:\n👇👇👇";
        break;
      case 'link':
        template = "🔗 KLIK LINK INI 🔗\n---------------------------\n\nhttps://example.com\n\nJangan lupa share ke teman!";
        break;
      case 'promo':
        template = "⭐ PROMO SPESIAL ⭐\n---------------------------\n\nDapatkan diskon 50% untuk pembelian hari ini!\nKode: PROMO50\n\nBerlaku hingga " + new Date().toLocaleDateString('id-ID');
        break;
      default:
        return;
    }
    
    // Sisipkan template ke textarea saja (tanpa judul)
    messageArea.value = template;
    
    // Focus ke textarea
    messageArea.focus();
  }
  
  // Fungsi untuk format angka dengan leading zero
  function padZero(num) {
    return num < 10 ? '0' + num : num;
  }
  
  // Fungsi untuk mengkonversi timestamp ke timezone Asia/Jakarta
  function getJakartaTime() {
    return new Date().toLocaleString('en-US', { timeZone: 'Asia/Jakarta' });
  }
  
  // Fungsi update semua countdown dengan timezone Jakarta
  function updateAllCountdowns() {
    const countdownElements = document.querySelectorAll('.countdown-timer');
    
    // Dapatkan waktu Jakarta
    const jakartaDate = new Date(getJakartaTime());
    const now = jakartaDate.getTime();
    
    try {
      countdownElements.forEach(element => {
        try {
          const targetTimestamp = parseInt(element.getAttribute('data-timestamp'));
          const displayElement = element.querySelector('.countdown-display');
          const postId = element.getAttribute('data-post-id');
          const postRow = element.closest('tr');
          
          // Jika post sudah diproses, lewati
          if (postRow && postRow.getAttribute('data-processed') === 'true') {
            const lastAttempt = parseInt(postRow.getAttribute('data-last-attempt') || '0');
            const timeSinceLastAttempt = now - lastAttempt;
            
            // Jika sudah lebih dari 30 detik sejak percobaan terakhir yang gagal, coba lagi
            if (timeSinceLastAttempt > 30000 && displayElement.innerHTML.includes('Koneksi Error')) {
              postRow.removeAttribute('data-processed');
            } else {
              return;
            }
          }
          
          const timeLeft = targetTimestamp - now;
          
          // Jika waktu habis, kirim post secara otomatis
          if (timeLeft <= 0) {
            // Cek apakah elemen sudah menampilkan "Memproses" atau sudah diproses
            const isProcessing = displayElement.innerHTML.includes('Memproses') || 
                                displayElement.innerHTML.includes('Mengirim');
            
            // Jika belum memproses, maka trigger pengiriman
            if (!isProcessing && postId && !postRow.getAttribute('data-processed')) {
              // Tambahkan flag untuk mencegah retry berulang
              if (!window.sendingPosts) window.sendingPosts = {};
              if (window.sendingPosts[postId]) {
                console.log('Sudah ada pengiriman yang sedang berlangsung untuk post ini');
                return;
              }
              
              // Tandai sebagai sedang diproses di level DOM
              window.sendingPosts[postId] = true;
              postRow.setAttribute('data-processed', 'true');
              
              displayElement.innerHTML = `
                <span class="badge bg-warning px-2 py-1">
                  <i class="bi bi-arrow-clockwise me-1"></i>Mengirim...
                </span>
              `;
              
              // Gunakan setTimeout untuk mengurangi beban bersamaan
              setTimeout(() => {
                try {
                  // Kirim post dengan retry mechanism
                  sendPostWithRetry(postId, 3)
                    .finally(() => {
                      delete window.sendingPosts[postId];
                    });
                } catch (err) {
                  console.error('Error dalam setTimeout sendPost:', err);
                  delete window.sendingPosts[postId];
                }
              }, Math.random() * 1000); // Tambahkan jitter untuk menghindari request bersamaan
            }
            return;
          }
          
          // Hitung hari, jam, menit, detik
          const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
          const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
          const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
          const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);
          
          let countdownHTML = '';
          
          // Format tampilan countdown
          if (days > 0) {
            countdownHTML = `
              <div class="d-flex justify-content-between countdown-blocks">
                <div class="countdown-block">
                  <span class="countdown-number">${days}</span>
                  <span class="countdown-label">Hari</span>
                </div>
                <div class="countdown-block">
                  <span class="countdown-number">${padZero(hours)}</span>
                  <span class="countdown-label">Jam</span>
                </div>
                <div class="countdown-block">
                  <span class="countdown-number">${padZero(minutes)}</span>
                  <span class="countdown-label">Menit</span>
                </div>
                <div class="countdown-block">
                  <span class="countdown-number">${padZero(seconds)}</span>
                  <span class="countdown-label">Detik</span>
                </div>
              </div>
            `;
          } else if (hours > 0) {
            countdownHTML = `
              <span class="badge bg-primary px-2 py-1">
                <i class="bi bi-hourglass-split me-1"></i>${padZero(hours)}:${padZero(minutes)}:${padZero(seconds)}
              </span>
            `;
          } else if (minutes > 0) {
            countdownHTML = `
              <span class="badge bg-warning px-2 py-1">
                <i class="bi bi-hourglass-split me-1"></i>${padZero(minutes)}:${padZero(seconds)}
              </span>
            `;
          } else {
            countdownHTML = `
              <span class="badge bg-danger px-2 py-1">
                <i class="bi bi-hourglass-bottom me-1"></i>${padZero(seconds)} detik
              </span>
            `;
          }
          
          displayElement.innerHTML = countdownHTML;
        } catch (elementError) {
          console.error('Error memproses countdown pada elemen:', elementError);
        }
      });
    } catch (error) {
      console.error('Error dalam updateAllCountdowns:', error);
    }
  }
  
  // Retry mechanism untuk pengiriman post
  async function sendPostWithRetry(postId, maxRetries = 3, delay = 1000) {
    let lastError;
    
    for (let attempt = 1; attempt <= maxRetries; attempt++) {
      try {
        // Jika bukan percobaan pertama, tunggu sebelum mencoba lagi
        if (attempt > 1) {
          await new Promise(resolve => setTimeout(resolve, delay * (attempt - 1)));
        }
        
        console.log(`Mencoba kirim post ${postId}, percobaan ke-${attempt}/${maxRetries}`);
        const result = await sendPostPromise(postId);
        return result; // Berhasil, keluar dari loop
      } catch (error) {
        console.error(`Percobaan ke-${attempt} gagal:`, error);
        lastError = error;
        
        // Jika error bukan network related, tidak perlu retry
        if (!error.message.includes('network') && 
            !error.message.includes('connection') &&
            !error.message.includes('fetch')) {
          throw error;
        }
        
        // Jika ini percobaan terakhir, tampilkan error
        if (attempt === maxRetries) {
          const displayElement = document.querySelector(`[data-post-id="${postId}"] .countdown-display`);
          if (displayElement) {
            displayElement.innerHTML = `
              <span class="badge bg-danger px-2 py-1">
                <i class="bi bi-exclamation-triangle me-1"></i>Gagal setelah ${maxRetries}x
              </span>
            `;
          }
        }
      }
    }
    
    // Jika sampai sini, semua percobaan gagal
    throw lastError;
  }
  
  // Versi Promise dari sendPost
  function sendPostPromise(postId) {
    return new Promise((resolve, reject) => {
      // Periksa status post
      const postRow = document.querySelector(`[data-post-id="${postId}"]`).closest('tr');
      if (!postRow || !postRow.classList.contains('status-pending')) {
        console.log('Post sudah tidak dalam status pending, tidak mengirim');
        return reject(new Error('Post tidak dalam status pending'));
      }
      
      // Tampilkan loading
      const displayElement = document.querySelector(`[data-post-id="${postId}"] .countdown-display`);
      if (displayElement) {
        displayElement.innerHTML = `
          <span class="badge bg-warning px-2 py-1">
            <i class="bi bi-arrow-clockwise me-1 spin"></i>Mengirim...
          </span>
        `;
      }
      
      // Kirim request ke server dengan timeout
      const controller = new AbortController();
      const timeoutId = setTimeout(() => {
        controller.abort();
        reject(new Error('Request timeout'));
      }, 15000); // 15 detik timeout
      
      fetch(`/posts/send/${postId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        signal: controller.signal
      })
      .then(response => {
        clearTimeout(timeoutId);
        
        // Cek respons dan dapatkan data JSON terlepas dari status
        return response.json().catch(e => {
          // Jika tidak bisa parse JSON, buat objek error manual
          if (response.status === 400) {
            return { 
              success: false, 
              message: 'Post sudah diproses atau tidak dalam status pending' 
            };
          }
          throw new Error(`Server error: ${response.status}`);
        }).then(data => {
          // Tambahkan status ke data untuk penanganan lebih lanjut
          return { ...data, status: response.status };
        });
      })
      .then(data => {
        console.log('Server response:', data);
        
        if (data.success) {
          // Berhasil
          displayElement.innerHTML = `
            <span class="badge bg-success px-2 py-1">
              <i class="bi bi-check-circle me-1"></i>Berhasil
            </span>
          `;
          setTimeout(() => {
            window.location.reload();
          }, 1000);
          resolve(data);
        } else {
          // Tampilkan pesan error dan tandai sudah diproses
          if (displayElement) {
            // Untuk status 400, tampilkan pesan dengan format berbeda
            if (data.status === 400) {
              displayElement.innerHTML = `
                <span class="badge bg-secondary px-2 py-1">
                  <i class="bi bi-info-circle me-1"></i>Sudah diproses
                </span>
              `;
              // Refresh halaman setelah 2 detik untuk dapat status terbaru
              setTimeout(() => {
                window.location.reload();
              }, 2000);
              resolve(data); // Resolve karena ini bukan error sebenarnya
            } else {
              displayElement.innerHTML = `
                <span class="badge bg-danger px-2 py-1">
                  <i class="bi bi-exclamation-triangle me-1"></i>${data.message || 'Gagal mengirim'}
                </span>
              `;
              reject(new Error(data.message || 'Gagal mengirim'));
            }
          } else {
            reject(new Error(data.message || 'Gagal mengirim'));
          }
        }
      })
      .catch(error => {
        console.error('Error:', error);
        clearTimeout(timeoutId);
        
        // Tampilkan error dan izinkan mencoba lagi setelah 30 detik
        if (displayElement) {
          displayElement.innerHTML = `
            <span class="badge bg-danger px-2 py-1">
              <i class="bi bi-exclamation-triangle me-1"></i>Koneksi Error
            </span>
          `;
          
          // Izinkan mencoba lagi setelah 30 detik
          setTimeout(() => {
            postRow.removeAttribute('data-processed');
          }, 30000);
        }
        
        reject(error);
      });
    });
  }
  
  // Fungsi versi lama masih dipertahankan untuk backward compatibility
  function sendPost(postId) {
    sendPostWithRetry(postId, 3)
      .catch(error => {
        console.error('Gagal mengirim post setelah beberapa percobaan:', error);
      });
  }
  
  // Fungsi untuk menampilkan modal jadwal ulang
  function showRescheduleModal(postId) {
    // Set nilai default untuk tanggal dan waktu (1 jam dari sekarang)
    const jakartaTime = new Date().toLocaleString('en-US', { timeZone: 'Asia/Jakarta' });
    const today = new Date(jakartaTime);
    
    const year = today.getFullYear();
    let month = today.getMonth() + 1;
    let day = today.getDate();
    
    month = month < 10 ? '0' + month : month;
    day = day < 10 ? '0' + day : day;
    
    let hours = today.getHours() + 1;
    let minutes = today.getMinutes();
    
    hours = hours < 10 ? '0' + hours : hours;
    minutes = minutes < 10 ? '0' + minutes : minutes;
    
    document.getElementById('rescheduleDate').value = `${year}-${month}-${day}`;
    document.getElementById('rescheduleTime').value = `${hours}:${minutes}`;
    document.getElementById('reschedulePostId').value = postId;
    
    // Reset alert
    const alertElement = document.getElementById('rescheduleAlert');
    alertElement.classList.add('d-none');
    
    // Tampilkan modal
    const modal = new bootstrap.Modal(document.getElementById('rescheduleModal'));
    modal.show();
  }
  
  // Fungsi untuk kirim paksa post yang sedang dalam eksekusi
  function forceResendPost(postId) {
    Swal.fire({
      title: 'Kirim Paksa Post?',
      text: 'Post ini sedang dalam proses eksekusi. Kirim paksa dapat menyebabkan post terkirim dua kali. Lanjutkan?',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
      confirmButtonText: 'Ya, Kirim Paksa!',
      cancelButtonText: 'Batal',
      background: '#212529',
      color: '#fff'
    }).then((result) => {
      if (result.isConfirmed) {
        // Tampilkan loading
        Swal.fire({
          title: 'Mengirim...',
          text: 'Mengabaikan status dan mengirim paksa',
          icon: 'info',
          allowOutsideClick: false,
          didOpen: () => {
            Swal.showLoading();
            
            // Gunakan approach yang berbeda - form submit dengan iframe untuk mengatasi error koneksi
            // Buat form tersembunyi
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = `/posts/send/${postId}?force=true`;
            form.style.display = 'none';
            form.target = 'force_resend_frame';
            
            // Menambahkan form ke body
            document.body.appendChild(form);
            
            // Buat iframe untuk target
            const iframe = document.createElement('iframe');
            iframe.name = 'force_resend_frame';
            iframe.style.display = 'none';
            document.body.appendChild(iframe);
            
            // Handler untuk timeout
            const timeoutId = setTimeout(() => {
              // Jika timeout, refresh halaman
              Swal.fire({
                icon: 'info',
                title: 'Proses Selesai',
                text: 'Post telah diproses. Menyegarkan halaman...',
                background: '#212529',
                color: '#fff',
                timer: 2000,
                showConfirmButton: false
              }).then(() => {
                window.location.reload();
              });
            }, 8000);
            
            // Handler untuk iframe onload
            iframe.onload = function() {
              clearTimeout(timeoutId);
              Swal.fire({
                icon: 'success',
                title: 'Permintaan Terkirim',
                text: 'Post sedang diproses ulang',
                background: '#212529',
                color: '#fff',
                timer: 2000,
                showConfirmButton: false
              }).then(() => {
                window.location.reload();
              });
            };
            
            // Submit form
            form.submit();
          }
        });
      }
    });
  }
  
  // Fungsi untuk kirim ulang post
  function resendPost(postId) {
    Swal.fire({
      title: 'Kirim Ulang Post?',
      text: 'Post ini akan dikirim ulang sekarang',
      icon: 'question',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Ya, Kirim Ulang!',
      cancelButtonText: 'Batal',
      background: '#212529',
      color: '#fff'
    }).then((result) => {
      if (result.isConfirmed) {
        // Tampilkan loading
        Swal.fire({
          title: 'Mengirim...',
          text: 'Mohon tunggu sebentar',
          icon: 'info',
          allowOutsideClick: false,
          didOpen: () => {
            Swal.showLoading();
            
            // Menggunakan form + iframe untuk menghindari error koneksi
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = `/posts/send/${postId}`;
            form.style.display = 'none';
            form.target = 'resend_frame';
            
            // Menambahkan form ke body
            document.body.appendChild(form);
            
            // Buat iframe untuk target
            const iframe = document.createElement('iframe');
            iframe.name = 'resend_frame';
            iframe.style.display = 'none';
            document.body.appendChild(iframe);
            
            // Handler untuk timeout
            const timeoutId = setTimeout(() => {
              // Jika timeout, refresh halaman
              Swal.fire({
                icon: 'info',
                title: 'Proses Selesai',
                text: 'Post telah diproses. Menyegarkan halaman...',
                background: '#212529',
                color: '#fff',
                timer: 2000,
                showConfirmButton: false
              }).then(() => {
                window.location.reload();
              });
            }, 8000);
            
            // Handler untuk iframe onload
            iframe.onload = function() {
              clearTimeout(timeoutId);
              Swal.fire({
                icon: 'success',
                title: 'Berhasil',
                text: 'Permintaan pengiriman ulang berhasil',
                background: '#212529',
                color: '#fff',
                timer: 2000,
                showConfirmButton: false
              }).then(() => {
                window.location.reload();
              });
            };
            
            // Submit form
            form.submit();
          }
        });
      }
    });
  }
  
  // Fungsi untuk jadwal ulang post
  function reschedulePost() {
    const postId = document.getElementById('reschedulePostId').value;
    const scheduleDate = document.getElementById('rescheduleDate').value;
    const scheduleTime = document.getElementById('rescheduleTime').value;
    
    if (!scheduleDate || !scheduleTime) {
      Swal.fire({
        icon: 'warning',
        title: 'Perhatian',
        text: 'Tanggal dan waktu harus diisi',
        background: '#212529',
        color: '#fff'
      });
      return;
    }
    
    // Tutup modal
    const modal = bootstrap.Modal.getInstance(document.getElementById('rescheduleModal'));
    modal.hide();
    
    // Tampilkan loading
    Swal.fire({
      title: 'Menjadwalkan Ulang...',
      text: 'Mohon tunggu sebentar',
      icon: 'info',
      allowOutsideClick: false,
      didOpen: () => {
        Swal.showLoading();
        
        // Kirim request ke server dengan timeout
        const controller = new AbortController();
        const timeoutId = setTimeout(() => controller.abort(), 15000); // 15 detik timeout
        
        fetch(`/posts/reschedule/${postId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ scheduleDate, scheduleTime }),
          signal: controller.signal
        })
        .then(response => {
          clearTimeout(timeoutId);
          return response.json().catch(e => {
            throw new Error(`Server error: ${response.status}`);
          });
        })
        .then(data => {
          console.log('Server response:', data);
          
          if (data.success) {
            // Berhasil
            Swal.fire({
              icon: 'success',
              title: 'Berhasil',
              text: 'Post berhasil dijadwalkan ulang',
              background: '#212529',
              color: '#fff'
            }).then(() => {
              window.location.reload();
            });
          } else {
            // Gagal
            Swal.fire({
              icon: 'error',
              title: 'Gagal',
              text: data.message || 'Gagal menjadwalkan ulang post',
              background: '#212529',
              color: '#fff'
            });
          }
        })
        .catch(error => {
          console.error('Error:', error);
          clearTimeout(timeoutId);
          
          Swal.fire({
            icon: 'error',
            title: 'Error Koneksi',
            text: 'Terjadi kesalahan saat menjadwalkan ulang post. ' + (error.message || ''),
            background: '#212529',
            color: '#fff'
          });
        });
      }
    });
  }
</script>

<style>
  /* Styling untuk countdown */
  .countdown-blocks {
    width: 100%;
    gap: 8px;
  }
  
  .countdown-block {
    text-align: center;
    min-width: 40px;
  }
  
  .countdown-number {
    font-size: 1.1rem;
    font-weight: 700;
    color: var(--primary-color);
    display: block;
  }
  
  .countdown-label {
    font-size: 0.7rem;
    color: var(--text-muted);
    text-transform: uppercase;
    display: block;
  }
  
  /* Styling untuk tab */
  .nav-tabs .nav-link {
    color: #6c757d;
    border: none;
    border-bottom: 2px solid transparent;
    padding: 0.5rem 1rem;
    font-weight: 500;
  }
  
  .nav-tabs .nav-link:hover {
    border-color: transparent;
    border-bottom: 2px solid #6c757d;
  }
  
  .nav-tabs .nav-link.active {
    background-color: transparent;
    border-color: transparent;
    border-bottom: 2px solid currentColor;
  }
</style>

<%- include('../partials/footer') %> 